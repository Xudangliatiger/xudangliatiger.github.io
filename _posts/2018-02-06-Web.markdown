---
layout:     post
title:      "本人的第一次WEB开发学习"
date:       2018-02-6 12:00:00
author:     "xu"
header-img: "img/post-bg-miui6.jpg"
tags:
    - Web
    - Javaee
---
<div>
    <blockquote>人生第一次去公司，第一次写实在的程序，第一次开
        <br>博客，第一次…</blockquote>
    听起来好些异常美好，因为这是人生的第一次
    <br>
    <br><b>可是，实际真的没有这么美妙</b>。
    <br>因为我
    <br><b>真的什么都不会，什么都是0基础</b>
    <br>
    <br>
    <br>打个比方吧
    <br>eclipse，ide怎么用，每个按钮什么意思，功能是什么，怎么新建maven项目，怎么装插件，怎么调字体，怎么理解框架，怎么调用数据库啊，怎么让其他的东西和我同步，最恐怖的是，在我想COPY的时候，我居然COPY不了，全是BUG，出了BUG之后吧，你怎么调试啊，怎么看控制台啊，怎么分析错误信息或者服务器返回的错误信息啊，或者怎么看TCPIP监视器啊。路漫漫其修远兮，接下来我要送上我的体会心得，注意，由于我是记事本上顺手打的，所以难免很粗鲁···哎理应为自己羞愧，在困难面前居然开口大骂
    <br>
    <br>但是我是如此真性情的一个人，自己丑陋的一面，应该改正，不应该假装，所以把我的日记原文发布如下
    <blockquote>
    spring：
1.javabean的含义
2.面向切面和容器的含义。
3.applicationcontext配置文件里的各种内容需要掌握吗？
<br> <br>

springMVC：
1.配置文件和web.xml的整合方式

<br> <br>
Mybatis：
1.使用方法
2.dao和mapping区别
3.原理：如何通过XML注解来将java对象映射成数据库中的记录
4：与数据库链接的内容包括链接JDBC都是spring的xml配置文件里写的，这个MYbatis的配置文件有什么意义，按理说它不是管理数据库连接的么
？
<br> <br>

杂项：
JAR包的配置：{webroot和webapplibrarise的区别
Servlet和容器是什么意思
配置文件XML，XML到底怎么运行的，由spring调用sax？？

<br> <br>
在搭载好了这个SSM平台后，今后的开发怎么修改，或者说需要统一的框架吗？在开发时，每个功能都需要搭建一次吗？

<br> <br>

JSP全名为Java Server Pages，其根本是一个简化的Servlet设计，他实现了Html语法中的java扩张（以 <%, %>形式）。JSP与Servlet一样，是在服务器端执行的。通常返回给客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。Web服务器在遇到访问JSP网页的请求时，首先执行其中的程序段，然后将执行结果连同JSP文件中的HTML代码一起返回给客户端。插入的Java程序段可以操作数据库、重新定向网页等，以实现建立动态网页所需要的功能。

<br> <br>

关于tomcat404的差错，从头开始··发现以为是tomcat配置出错，后来重装了几次，不是···
又以为是JRE 出错，因为并未引入tomcat 的JRE包，仍旧打不开
然后又创了几个新工程，一步一步的试，发现，一开始可以，后来不行，所以一定是某个配置文件出错了，现在修改WEB.XML
发现不是WEB.xml，还是pom和XML一起就出错
最后发现是少了applicationcontext···
??/(ㄒoㄒ)/~~

<br> <br>




老子日妈，把application和另一个配置文件弄丢丢了，日他妈，我决定不玩了，现在只COPY一个

，弄好就行，不搭框架了，现在看懂作数，日他妈，日他妈
<br> <br>



事实证明，想COPY一个框架也JER很难，因为你在copy框架时，必须面临着别的开发者对于路径和配置方法的瞎改····所以，你看不懂，也copy不了·而你看懂了，不如自己做一个，copy反而很难，但是copy别人写的套路格式性的东西很有必要，这样很减免时间，学习这个框架两周后的我···，终于，下定决心，从头再来，因为之前写的东西bug实在太多了，瞎几把改是不可能的，不如重头再来，但是发现第一次我做了几天的工作，现今我几分钟就能搭建好，果然···成果都来自于经验，至少软件开发是这样的
希望接下来一天的时间内，我能把根本弄好，不必妄自菲薄，毕竟我什么都没有接触过，从0开始学使用这些工具，真的令人头大，还好，我把这个工作完成后，就算真的入了计算机的大门！


<br> <br>







我日妈，今天出了一个奇怪的BUG，can't find beans，日妈的改了N便都有问题，干脆自己乱弄
，弄到晚上6点了，结果又出来404,老子要疯求了

<br> <br>




eclipse真的太反人类；了，所有的基本设置都是往最不好用，最容易出差错的方向配置，把你新手坑的想死


<br> <br>



通过修改了网上的二十种方法，终于



终于，弄出来了，最后灵机一动试了下将其移除webIFO，终于，全部成功!!!

<br> <br>



前两周总结：之所以很难，其实和很多东西都没有接触过，从学eclipse和学IDE，学JAR包，学web，学服务器，学写代码，学了无数个方面的无数基础，但如今，真的，入门了！

<br> <br>
刘老哥说的很对，关键是学会遇见问题时怎么解决：
  1：直接问人，不切实际，对方可能也不知道你这个问题的复杂程度，或者怎么解决。但是在学习阶段可以问，这样会节省非常多的时间。即使对方认为你的问题是应当自己解决的，就停止询问，自己解决，如果是没有意义的，在别人的帮助下迅速跳过这个问题，然后进行下一步学习与工作
  2：你的笨办法，触类旁通，把接近的很多东西全部看一遍，其实时效率极低的。但是会有一个好处，那就是  顿悟，或者说，厚积薄发。但不适合在软件开发行业，你的BUG是固定情况下的固定问题，没有长期持用意义，所以能过就过，不必纠结原理或者深究其内涵。但是想要在一个行业的方面深度耕织，必须要究其内涵，比如那些SSM框架开发的老师，把每个API的深处原理都搞得清，但是你没有必要去了解那么清楚，这些东西只是一个工具，是武器，关键还是内功心法的修行，剑招会一套即可，研究剑招，不如研究内功（算法之类的）。
  3：在今后处理BUG上，多看控制台，学会分析控制台语句，然后一步步理解，学会截取关键字来百度。
  4：在学习工具类知识时，一定不要过度纠结，能用即可，能达到自己的使用要求为目的，不用在内功心法没有成就或者底气之前就过度将精力抛在此处。一定要将精力和时间做最划算的投放!!!!!!!!!




<br> <br>







今天发现，真的要自己学，老是借鉴别人的，全是BUG，根本不得行，不如一开始就老老实实地自己学，学明白。但是这个真的很耗时间！

<br> <br>


终于，别人瞎jb改的路径，我照着格式修改，就是有问题。但我自己按照内心的理解一写，一跑，就过！！！
<br> <br>
所以自身学习最大的困难，还是网络资源的良莠不齐，很恼火！
    </blockquote>
    
</div>
